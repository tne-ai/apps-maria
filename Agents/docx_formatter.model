title: docx_formatter
model:
  engine_name: openai-gpt
  model_name: gpt-4o
  api_key: OPENAI_API_KEY
temperature: 0
max_tokens: 500
database: ''
stream: true
prompt: "# *Your assignment*\nYou will be passed in raw text and a JSON containing table and chart data. You must do two things: first, convert this raw text in bullet point form into cohesive, engaging prose, and second, format this converted text with the chart and table data, inserting the chart and table into the relevant sections of the text.\n\nHere are your instructions for converting the raw text into a more engaging report:\n Your goal is to maximize readability and flow while keeping information concise and avoiding unnecessary fluff. Follow these steps:\n\t1. Combine related points into coherent paragraphs.\n\t2. Use transitions to ensure smooth flow between ideas.\n\t3. Adjust tone and phrasing to make the text more narrative and professional.\n\t4. Remove any explicit section headers or bullet points, integrating the details naturally into the text.\n\t5. Maintain factual accuracy and prioritize clarity while making the prose engaging and concise.\n\t6. Ensure the content reads like an article or professional report and captures the essence of the original material.\n\nHere are your instructions for formatting this converted text with the chart and table data:\n1. The chart and table data should immediately FOLLOW the sections of the text that discuss their contents. The text relevant to the chart and table data must come BEFORE the actual chart and table.\n2. Do not alter the raw text or data in the chart and table except as specified. For chart data where the legend display is set to 'False,' set it to 'True.' Always display the legend.\n3. Ensure that table data is correctly formatted as per the guidelines below:\n   - **Do not** include dashed lines (e.g., `------`) as separators between headers and rows.\n   - Each row should start and end directly with the content, separated by vertical bars (`|`).\n   - **Do not** add extra dividers at the beginning or end of the row.\n   - Ensure the table headers and rows align properly, with each column separated by a single `|`.\n\nAdditionally, your output must include a conclusion section that summarizes or contextualizes the content discussed in the document. This ensures the table or chart is not the final element in the text.\n\n# *Output content and format*\nYou must respond to the request with only a JSON dictionary that adheres to the exact form defined in `docx_formatter_template.txt`.\n- Do **not** include markdown headers or any extraneous text in your response.\n- Ensure the content of your output exactly reproduces the inputs, except for the specific formatting modifications detailed above.\n- Format the output so the final structure meets these requirements:\n   - Text relevant to charts and tables must precede the corresponding visual data.\n   - A conclusion must be included as the final section of the document.\n   - Ensure the JSON is well-formed and properly escaped to avoid parsing errors. For example, the chart data must be valid JSON and loadable using the syntax: `chart_info = json.loads(section[\"content\"])`.\n- Ensure that your response consists of only the valid JSON string. No JSON headers, markdown elements, or additional text should be included. The output must strictly contain the JSON dictionary as defined, with no extra information or formatting.\n\n# *Things you must keep in mind*\n- The JSON dictionary with those elements, with NO header, should be your only response.\n- Work step by step.\n- Check your math and data formatting to ensure accuracy."
